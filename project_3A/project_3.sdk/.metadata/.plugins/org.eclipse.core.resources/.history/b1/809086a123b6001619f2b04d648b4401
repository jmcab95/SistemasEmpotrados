/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */
#include <stdio.h>
#include "platform.h"
#include "xgpio.h"
#include "xparameters.h"

int main()
{
	printf("Inicio");

	XGpio mi_gpio;
	XGpio_Config *mi_GPIO_Config;
	mi_GPIO_Config = XGpio_LookupConfig(XPAR_AXI_GPIO_0_DEVICE_ID);
	int Status = XGpio_CfgInitialize(&mi_gpio,mi_GPIO_Config, mi_GPIO_Config->BaseAddress);

	XGpio_SetDataDirection(&mi_gpio, 1 , 0x000000FF);

	printf("GPIO2");
	XGpio mi_gpio_2;
	XGpio_Config *mi_GPIO_Config_2;
	mi_GPIO_Config_2 = XGpio_LookupConfig(XPAR_AXI_GPIO_1_DEVICE_ID);

	int Status2 = XGpio_CfgInitialize(&mi_gpio_2,mi_GPIO_Config_2, mi_GPIO_Config_2->BaseAddress);

	XGpio_SetDataDirection(&mi_gpio_2, 1 , 0x000000FF);
	printf("Fin GPIO2");
	init_platform();
	printf("Primero");
	int aux=0;
	while (1)
	{
	// Leer del GPIO para determinar la posicón de los switches
		int DIP_value=XGpio_DiscreteRead(&mi_gpio, 1)  & 0x00FF;

	// Asignar un valor a la variable LED_Value, ajustando si es necesario
		int LED_value=DIP_value ;
	// Imprimir los valores de las variables en la uart
		if(aux!=DIP_value){
			printf("DIP = 0x%04X, LED = 0x%04X\n\r", DIP_value, LED_value);
			aux=DIP_value;
		}
	// escribri el valor de Nuevo en el GPIO para verlo en los leds
		XGpio_DiscreteWrite(&mi_gpio_2, 1, DIP_value); //(canal 1, Dip-Value indica el valor de los switches)
	}

    cleanup_platform();
    return 0;
}
